[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"forecast.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/api/forecast.js                                                          //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nmodule.export({\n  Forecast: () => Forecast\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Forecast = new Mongo.Collection('forecast');\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"WeekForecast.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/ui/WeekForecast.js                                                       //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 1);\nlet Forecast;\nmodule.link(\"../api/forecast.js\", {\n  Forecast(v) {\n    Forecast = v;\n  }\n\n}, 2);\nlet DayForecast;\nmodule.link(\"./DayForecast.js\", {\n  default(v) {\n    DayForecast = v;\n  }\n\n}, 3);\n\nclass WeekForecast extends Component {\n  renderDays() {\n    return this.props.forecast.map(d => React.createElement(DayForecast, {\n      key: d._id,\n      report: d\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"row text-center bg-success\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm\"\n    }, \"7 Day Forecast\")), React.createElement(\"div\", {\n      className: \"row\"\n    }, this.renderDays()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    forecast: Forecast.find({}).fetch()\n  };\n})(WeekForecast));\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// client/main.js                                                                   //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nlet WeekForecast;\nmodule.link(\"../imports/ui/WeekForecast.js\", {\n  default(v) {\n    WeekForecast = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(WeekForecast, null), document.getElementById(\"root\"));\n});\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"ee5b42a7f035f7ea21c9c18d80a1173237eedce5","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/forecast.js","imports/ui/WeekForecast.js","client/main.js"],"names":["module","export","Forecast","Mongo","link","v","Collection","React","Component","default","withTracker","DayForecast","WeekForecast","renderDays","props","forecast","map","d","_id","render","exportDefault","find","fetch","Meteor","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\n\r\nexport const Forecast = new Mongo.Collection('forecast');","import React, { Component } from \"react\";\r\nimport { withTracker } from 'meteor/react-meteor-data';\r\n\r\nimport { Forecast } from '../api/forecast.js';\r\nimport DayForecast from \"./DayForecast.js\";\r\n \r\nclass WeekForecast extends Component {\r\n\r\n  renderDays() {\r\n    return this.props.forecast.map((d) => (\r\n      <DayForecast key={d._id} report={d} />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row text-center bg-success\">\r\n          <div className=\"col-sm\">\r\n            7 Day Forecast        \r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.renderDays()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTracker(() => {\r\n  return {\r\n    forecast: Forecast.find({}).fetch(),\r\n  };\r\n})(WeekForecast);","import React from \"react\";\r\nimport { Meteor } from \"meteor/meteor\";\r\nimport { render } from \"react-dom\";\r\n \r\nimport WeekForecast from \"../imports/ui/WeekForecast.js\";\r\n \r\nMeteor.startup(() => {\r\n  render(<WeekForecast />, document.getElementById(\"root\"));\r\n});"]}}]